using LogisticsAndDeliveries.Application.Deliveries.GetDeliveries;
using LogisticsAndDeliveries.Application.Deliveries.GetDelivery;
using MediatR;
using Microsoft.AspNetCore.Mvc;

namespace LogisticsAndDeliveries.WebApi.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class DeliveryController : ControllerBase
    {
        private readonly IMediator _mediator;

        public DeliveryController(IMediator mediator)
        {
            _mediator = mediator;
        }

        [HttpGet("getDelivery")]
        public async Task<IActionResult> GetDelivery([FromQuery] Guid deliveryId)
        {
            var result = await _mediator.Send(new GetDeliveryQuery(deliveryId));
            return Ok(result);
        }

        [HttpGet("getDeliveries")]
        public async Task<IActionResult> GetDeliveries([FromQuery] Guid driverId, [FromQuery] DateOnly scheduledDate)
        {
            var result = await _mediator.Send(new GetDeliveriesQuery(driverId, scheduledDate));
            return Ok(result);
        }
}
