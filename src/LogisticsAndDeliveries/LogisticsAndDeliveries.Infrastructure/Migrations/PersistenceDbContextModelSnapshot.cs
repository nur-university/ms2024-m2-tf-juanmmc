// <auto-generated />
using System;
using LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LogisticsAndDeliveries.Infrastructure.Migrations
{
    [DbContext(typeof(PersistenceDbContext))]
    partial class PersistenceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryIncidentPersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("packageId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.ToTable("deliveryIncident");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryPersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("LocationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("locationDate");

                    b.Property<double?>("LocationLatitude")
                        .HasColumnType("double precision")
                        .HasColumnName("locationLatitude");

                    b.Property<double?>("LocationLongitude")
                        .HasColumnType("double precision")
                        .HasColumnName("locationLongitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("delivery");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryRoutePersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DeliveryId")
                        .HasColumnType("uuid")
                        .HasColumnName("deliveryId");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("scheduledDate");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.ToTable("deliveryRoute");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.PackagePersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("deliveryAddress");

                    b.Property<Guid>("DeliveryId")
                        .HasColumnType("uuid")
                        .HasColumnName("deliveryId");

                    b.Property<double>("DeliveryLatitude")
                        .HasColumnType("double precision")
                        .HasColumnName("deliveryLatitude");

                    b.Property<double>("DeliveryLongitude")
                        .HasColumnType("double precision")
                        .HasColumnName("deliveryLongitude");

                    b.Property<DateTime?>("EvidenceDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("evidenceDate");

                    b.Property<string>("EvidenceObservations")
                        .HasColumnType("text")
                        .HasColumnName("evidenceObservations");

                    b.Property<string>("EvidencePhotoUrl")
                        .HasColumnType("text")
                        .HasColumnName("evidencePhotoUrl");

                    b.Property<string>("EvidenceReceiverName")
                        .HasColumnType("text")
                        .HasColumnName("evidenceReceiverName");

                    b.Property<string>("EvidenceReceiverSignature")
                        .HasColumnType("text")
                        .HasColumnName("evidenceReceiverSignature");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("identificationNumber");

                    b.Property<string>("PatientEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("patientEmail");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("patientId");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("patientName");

                    b.Property<string>("PatientPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("patientPhone");

                    b.Property<DateTime>("ScheduledDeliveryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("scheduledDeliveryDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("package");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryIncidentPersistenceModel", b =>
                {
                    b.HasOne("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.PackagePersistenceModel", "Package")
                        .WithMany("DeliveryIncidents")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryPersistenceModel", b =>
                {
                    b.OwnsMany("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.PackageAssignmentPersistenceModel", "PackageAssignments", b1 =>
                        {
                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uuid")
                                .HasColumnName("deliveryId");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<Guid>("PackageId")
                                .HasColumnType("uuid")
                                .HasColumnName("packageId");

                            b1.Property<DateTime>("ScheduledDate")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("scheduledDate");

                            b1.HasKey("DeliveryId", "Id");

                            b1.ToTable("packageAssignment");

                            b1.WithOwner("Delivery")
                                .HasForeignKey("DeliveryId");

                            b1.Navigation("Delivery");
                        });

                    b.Navigation("PackageAssignments");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryRoutePersistenceModel", b =>
                {
                    b.HasOne("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryPersistenceModel", "Delivery")
                        .WithMany("DeliveryRoutes")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryStopPersistenceModel", "DeliveryStops", b1 =>
                        {
                            b1.Property<Guid>("DeliveryRouteId")
                                .HasColumnType("uuid")
                                .HasColumnName("deliveryRouteId");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<int>("Order")
                                .HasColumnType("integer")
                                .HasColumnName("order");

                            b1.Property<Guid>("PackageId")
                                .HasColumnType("uuid")
                                .HasColumnName("packageId");

                            b1.HasKey("DeliveryRouteId", "Id");

                            b1.ToTable("deliveryStop");

                            b1.WithOwner("DeliveryRoute")
                                .HasForeignKey("DeliveryRouteId");

                            b1.Navigation("DeliveryRoute");
                        });

                    b.Navigation("Delivery");

                    b.Navigation("DeliveryStops");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryPersistenceModel", b =>
                {
                    b.Navigation("DeliveryRoutes");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.PackagePersistenceModel", b =>
                {
                    b.Navigation("DeliveryIncidents");
                });
#pragma warning restore 612, 618
        }
    }
}
