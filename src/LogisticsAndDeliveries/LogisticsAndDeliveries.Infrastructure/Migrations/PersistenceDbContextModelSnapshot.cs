// <auto-generated />
using System;
using LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LogisticsAndDeliveries.Infrastructure.Migrations
{
    [DbContext(typeof(PersistenceDbContext))]
    partial class PersistenceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryPersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uuid")
                        .HasColumnName("driverId");

                    b.Property<string>("EvidencePhoto")
                        .HasColumnType("text")
                        .HasColumnName("evidencePhoto");

                    b.Property<string>("IncidentDescription")
                        .HasColumnType("text")
                        .HasColumnName("incidentDescription");

                    b.Property<string>("IncidentType")
                        .HasColumnType("text")
                        .HasColumnName("incidentType");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid")
                        .HasColumnName("packageId");

                    b.Property<DateOnly>("ScheduledDate")
                        .HasColumnType("date")
                        .HasColumnName("scheduledDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("PackageId");

                    b.ToTable("delivery");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DriverPersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("LastLocationUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastLocationUpdate");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("driver");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.PackagePersistenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("deliveryAddress");

                    b.Property<double>("DeliveryLatitude")
                        .HasColumnType("double precision")
                        .HasColumnName("deliveryLatitude");

                    b.Property<double>("DeliveryLongitude")
                        .HasColumnType("double precision")
                        .HasColumnName("deliveryLongitude");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("number");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid")
                        .HasColumnName("patientId");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("patientName");

                    b.Property<string>("PatientPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("patientPhone");

                    b.HasKey("Id");

                    b.ToTable("package");
                });

            modelBuilder.Entity("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DeliveryPersistenceModel", b =>
                {
                    b.HasOne("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.DriverPersistenceModel", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsAndDeliveries.Infrastructure.Persistence.PersistenceModel.EFCoreEntities.PackagePersistenceModel", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Package");
                });
#pragma warning restore 612, 618
        }
    }
}
